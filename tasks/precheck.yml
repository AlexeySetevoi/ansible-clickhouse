- name: Requirements check | Checking sse4_2 support
  command: grep -q sse4_2 /proc/cpuinfo
  changed_when: False

- name: Requirements check | Not supported distribution && release
  fail:
    msg: "Your distribution {{ ansible_distribution }}_{{ ansible_distribution_release }} not supported by this role,sorry."
  when: clickhouse_supported|bool != True

- name: Requirements check | Check if Clickhouse is installed
  shell: dpkg-query -f '${Package} ' -W |grep -q "{{ clickhouse_package| join(" ")}}"
  register: clickhouse_rt_isinstalled
  ignore_errors: yes
  when: ansible_pkg_mgr == 'apt' and clickhouse_setup == 'package'
  changed_when: False
  check_mode: no

- name: Requirements check | Check if Clickhouse is installed
  shell: rpm -qa --queryformat '%{NAME}\n'  | sort | grep clickhouse | tr '\n' ' ' |grep -q "{{ clickhouse_package| join(" ")}}"
  register: clickhouse_rt_isinstalled
  ignore_errors: yes
  when: ansible_pkg_mgr == 'yum' and clickhouse_setup == 'package'
  changed_when: False
  check_mode: no

- name: Requirements check | Check if Clickhouse is installed and has required version
  shell: dpkg-query --showformat='${Version}' --show "{{ item }}"
  register: clickhouse_rt_versions_tmp
  ignore_errors: yes
  when: ansible_pkg_mgr == 'apt' and clickhouse_setup == 'package'
  changed_when: False
  check_mode: no
  with_items: "{{ clickhouse_package }}"

- name: Requirements check | Check if Clickhouse is installed and has required version
  shell: rpm -q --queryformat '%{VERSION}' "{{ item }}"
  register: clickhouse_rt_versions_tmp
  ignore_errors: yes
  when: ansible_pkg_mgr == 'yum' and clickhouse_setup == 'package'
  changed_when: False
  check_mode: no
  with_items: "{{ clickhouse_package }}"

- set_fact:
    clickhouse_rt_versions: "{{ clickhouse_rt_versions_tmp['results'] | map(attribute='stdout') | list }}"
- set_fact:
    clickhouse_is_required_version: "{{ clickhouse_version == '*' or (clickhouse_rt_versions | unique | count == 1 and clickhouse_rt_versions[0] == clickhouse_version) }}"
